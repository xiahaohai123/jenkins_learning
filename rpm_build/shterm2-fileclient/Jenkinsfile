map = ['']

pipeline {
    agent any
    stages {
        stage('prebuild') {
            steps {
                echo 'prebuild rpm'
            }
        }
        stage('build official rpm') {
            failFast true
            parallel {
                stage('build shterm2-fileclient') {
                    steps {
                        echo 'build shterm2-fileclient rpm'
                        script {
                            def authentication = '3af1598d-3a55-402f-b59f-c12a8c34cad3'
                            def buildProject = 'shterm2-fileclient'
                            def response = httpRequest authentication: authentication,
                                    url: 'http://repos.shterm.com/jenkins/view/HUAWEI/job/3.3.8-c-huaweiit/job/shterm2-fileclient-3.3.8-c-huaweiit/api/json?pretty=true'
                            if (response.status != 200) {
                                error("failed to get job information for ${buildProject}")
                            }
                            echo "succeed to get job information of ${buildProject}"
                            def jsonResponse = readJSON text: response.content
                            int nextBuildNumber = jsonResponse.nextBuildNumber
                            println("nextBuildNumber: ${nextBuildNumber}")

                            def newBuildResponse = httpRequest authentication: authentication,
                                    url: 'http://repos.shterm.com/jenkins/view/HUAWEI/job/3.3.8-c-huaweiit/job/shterm2-fileclient-3.3.8-c-huaweiit/build',
                                    httpMode: 'POST'
                            if (newBuildResponse.status != 201) {
                                error("failed to create build of ${buildProject}")
                            }
                            echo "succeed to create build of ${buildProject}"

                            while (true) {
                                def buildInfoResponse = httpRequest authentication: authentication,
                                        url: "http://repos.shterm.com/jenkins/view/HUAWEI/job/3.3.8-c-huaweiit/job/shterm2-fileclient-3.3.8-c-huaweiit/${nextBuildNumber}/api/json?pretty=true"
                                if (buildInfoResponse.status == 404) {
                                    echo "The created build is not building, wait for building."
                                    continue
                                }
                                if (buildInfoResponse.status != 200) {
                                    error("failed to get build information for ${buildProject}")
                                }
                                def jsonBuildInfoResponse = readJSON text: buildInfoResponse.content
                                boolean building = jsonBuildInfoResponse.building
                                def result = jsonBuildInfoResponse.result
                                if (!building) {
                                    if ('SUCCESS' != result) {
                                        error("failed to build ${buildProject}")
                                    } else {
                                        echo "succeed to build ${buildProject}"
                                        break
                                    }
                                }
                                sleep 10
                            }
                        }
                    }
                }
                stage('build 3proxy') {
                    steps {
                        echo 'build 3proxy rpm'
                    }
                }
            }
        }
        stage('get official old rpm') {
            steps {
                echo 'get official old rpm'
            }
        }
        stage('get official new script') {
            steps {
                echo 'get official new script'
            }
        }
        stage('get official old script') {
            steps {
                echo 'get official old script'
            }
        }
        stage('get lib') {
            steps {
                echo 'get lib'
            }
        }
        stage('build upgrade package') {
            steps {
                echo 'build upgrade package'
            }
        }
        stage('deploy') {
            steps {
                echo 'deploy'
            }
        }
    }
}